apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: presync-1
  annotations:
    argocd.argoproj.io/hook: PreSync
spec:
  entrypoint: actual-workflow
  podGC:
    # pod gc strategy must be one of the following
    # * OnPodCompletion - delete pods immediately when pod is completed (including errors/failures)
    # * OnPodSuccess - delete pods immediately when pod is successful
    # * OnWorkflowCompletion - delete pods when workflow is completed
    # * OnWorkflowSuccess - delete pods when workflow is successful
    strategy: OnPodSuccess
  serviceAccountName: workflow
  templates:
  - name: actual-workflow
    steps:
    - - name: start-maintenance-pod
        template: start-maintenance-pod
    - - name: patch-service
        template: patch-service
        continueOn:
          failed: true
    - - name: delete-sts
        template: delete-sts
        continueOn:
          failed: true
    - - name: sleep
        template: sleep
  - name: start-maintenance-pod
    resource:
      action: apply 
      successCondition: status.readyReplicas > 0
      manifest: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: maintenance
        spec:
          selector:
            matchLabels:
              app: maintenance
          template:
            metadata:
              labels:
                app: maintenance
            spec:
              containers:
              - name: nginx 
                image: k8s.gcr.io/nginx-slim:0.8
                ports:
                - containerPort: 80
                livenessProbe:
                  httpGet:
                    path: /
                    port: 80
                    httpHeaders:
                  initialDelaySeconds: 3
                  periodSeconds: 3
                readinessProbe:
                  httpGet:
                    path: /
                    port: 80
                  initialDelaySeconds: 3
                  periodSeconds: 3
  - name: patch-service
    resource:
      action: patch
      manifest: |
        apiVersion: v1
        kind: Service
        metadata:
          name: nginx
        spec:
          selector:
            app: maintenance
  - name: delete-sts 
    resource:
      action: delete 
      flags: ["--ignore-not-found"]
      manifest: |
        apiVersion: apps/v1
        kind:  StatefulSet
        metadata:
          name: nginx-main
  - name: delete-postsync-workflow
    resource:
      action: delete
      flags: ["--ignore-not-found"]
      manifest: |
        apiVersion: argoproj.io/v1alpha1
        kind: Workflow 
        metadata:
          name: postsync 
  - name: sleep
    container:
      image: alpine:latest
      command: [sh, -c]
      args: ["echo sleeping for 60s; sleep 60; echo done"]

